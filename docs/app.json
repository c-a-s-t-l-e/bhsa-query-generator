[{"name": "app.py", "content": "from shiny import App, render, ui, reactive, run_app\n\napp_ui = ui.page_sidebar(\n    ui.sidebar(\n        ui.input_selectize(\n            \"books\",\n            \"Books\",\n            choices=[\n                \"Genesis\", \"Exodus\", \"Leviticus\", \"Numeri\", \"Deuteronomium\",\n                \"Josua\", \"Judices\", \"Samuel_I\", \"Samuel_II\",\n                \"Reges_I\", \"Reges_II\", \"Jesaia\", \"Jeremia\",\n                \"Ezechiel\", \"Hosea\", \"Joel\", \"Amos\", \"Obadia\",\n                \"Jona\", \"Micha\", \"Nahum\", \"Habakuk\", \"Zephania\",\n                \"Haggai\", \"Sacharia\", \"Maleachi\", \"Psalmi\", \"Iob\",\n                \"Proverbia\", \"Ruth\", \"Canticum\", \"Ecclesiastes\",\n                \"Threni\", \"Esther\", \"Daniel\", \"Esra\", \"Nehemia\",\n                \"Chronica_I\", \"Chronica_II\"\n            ]\n        ),\n        ui.input_select(\n            \"scope\",\n            \"Scope\",\n            choices=[\"book\", \"chapter\", \"verse\", \"sentence\", \"clause\", \"phrase\"]\n        ),\n        ui.panel_conditional(\n            \"input.scope === 'sentence'\",\n            ui.h4(\"Sentence Features\"),\n            ui.input_select(\n                \"sentence_type\",\n                \"Sentence Type\",\n                choices=[\n                    \"\",\n                    \"AjCl\", \"CPen\", \"Defc\", \"Ellp\", \"InfA\", \"InfC\", \"MSyn\", \n                    \"NmCl\", \"Ptcp\", \"Reop\", \"Unkn\", \"Voct\", \"Way0\", \"WayX\",\n                    \"WIm0\", \"WImX\", \"WQt0\", \"WQtX\", \"WxI0\", \"WXIm\", \"WxIX\",\n                    \"WxQ0\", \"WXQt\", \"WxQX\", \"WxY0\", \"WXYq\", \"WxYX\", \"WYq0\",\n                    \"WYqX\", \"xIm0\", \"XImp\", \"xImX\", \"XPos\", \"xQt0\", \"XQtl\",\n                    \"xQtX\", \"xYq0\", \"XYqt\", \"xYqX\", \"ZIm0\", \"ZImX\", \"ZQt0\",\n                    \"ZQtX\", \"ZYq0\", \"ZYqX\"\n                ]\n            )\n        ),\n        ui.panel_conditional(\n            \"true\",\n            ui.h4(\"Word Features (all optional)\"),\n            ui.input_select(\n                \"sp\",\n                \"Part of Speech\",\n                choices=[\n                    \"\", \"art\", \"verb\", \"subs\", \"nmpr\", \"advb\", \"prep\", \n                    \"conj\", \"prps\", \"prde\", \"prin\", \"intj\", \"nega\",\n                    \"inrg\", \"adjv\"\n                ]\n            ),\n            ui.input_select(\n                \"gn\",\n                \"Gender\",\n                choices=[\"\", \"m\", \"f\", \"NA\", \"unknown\"]\n            ),\n            ui.input_select(\n                \"nu\",\n                \"Number\",\n                choices=[\"\", \"sg\", \"du\", \"pl\", \"NA\", \"unknown\"]\n            ),\n            ui.input_select(\n                \"ps\",\n                \"Person\",\n                choices=[\"\", \"p1\", \"p2\", \"p3\", \"NA\", \"unknown\"]\n            ),\n            ui.input_select(\n                \"st\",\n                \"State\",\n                choices=[\"\", \"a\", \"c\", \"e\"]\n            ),\n            ui.input_select(\n                \"vs\",\n                \"Verbal Stem\",\n                choices=[\n                    \"\", \n                    # Hebrew stems\n                    \"hif\", \"hit\", \"htpo\", \"hof\", \"nif\", \"piel\", \n                    \"poal\", \"poel\", \"pual\", \"qal\",\n                    # Aramaic stems\n                    \"afel\", \"etpa\", \"etpe\", \"haf\", \"hotp\", \"hsht\",\n                    \"htpa\", \"htpe\", \"nit\", \"pael\", \"peal\", \"peil\",\n                    \"shaf\", \"tif\", \"pasq\"\n                ]\n            ),\n            ui.input_select(\n                \"pdp\",\n                \"Phrase Dependent Part of Speech\",\n                choices=[\n                    \"\", \"art\", \"verb\", \"subs\", \"nmpr\", \"advb\", \"prep\", \n                    \"conj\", \"prps\", \"prde\", \"prin\", \"intj\", \"nega\",\n                    \"inrg\", \"adjv\"\n                ]\n            ),\n            ui.input_select(\n                \"prs_gn\",\n                \"Pronominal Suffix Gender\",\n                choices=[\"\", \"m\", \"f\", \"NA\", \"unknown\"]\n            ),\n            ui.input_select(\n                \"prs_nu\",\n                \"Pronominal Suffix Number\",\n                choices=[\"\", \"sg\", \"du\", \"pl\", \"NA\", \"unknown\"]\n            ),\n            ui.input_select(\n                \"prs_ps\",\n                \"Pronominal Suffix Person\",\n                choices=[\"\", \"p1\", \"p2\", \"p3\", \"NA\", \"unknown\"]\n            ),\n            ui.input_select(\n                \"ls\",\n                \"Lexical Set\",\n                choices=[\n                    \"\", \"nmdi\", \"nmcp\", \"padv\", \"afad\", \"ppre\", \"cjad\",\n                    \"ordn\", \"vbcp\", \"mult\", \"focp\", \"ques\", \"gntl\",\n                    \"quot\", \"card\", \"none\"\n                ]\n            ),\n            ui.input_text(\n                \"gloss\",\n                \"Gloss\",\n                placeholder=\"Enter gloss...\"\n            ),\n        ),\n    ),\n    ui.card(\n        ui.h3(\"Generated Query\"),\n        ui.tags.pre(\n            ui.output_text(\"search_template\"),\n            style=\"white-space: pre; font-family: monospace;\"\n        ),\n    )\n)\n\ndef server(input, output, session):\n    @render.text\n    def search_template():\n        features = []\n        if input.sp():\n            features.append(f\"sp={input.sp()}\")\n        if input.gn():\n            features.append(f\"gn={input.gn()}\")\n        if input.nu():\n            features.append(f\"nu={input.nu()}\")\n        if input.ps():\n            features.append(f\"ps={input.ps()}\")\n        if input.st():\n            features.append(f\"st={input.st()}\")\n        if input.vs():\n            features.append(f\"vs={input.vs()}\")\n        if input.gloss():\n            features.append(f\"gloss={input.gloss()}\")\n        if input.pdp():\n            features.append(f\"pdp={input.pdp()}\")\n        if input.prs_gn():\n            features.append(f\"prs_gn={input.prs_gn()}\")\n        if input.prs_nu():\n            features.append(f\"prs_nu={input.prs_nu()}\")\n        if input.prs_ps():\n            features.append(f\"prs_ps={input.prs_ps()}\")\n        if input.ls():\n            features.append(f\"ls={input.ls()}\")\n            \n        word_features = \" \".join(features)\n        sentence_type = f' typ=\"{input.sentence_type()}\"' if input.scope() == \"sentence\" and input.sentence_type() else \"\"\n        template = f\"\"\"query = \\\"\\\"\\\"\nbook book={input.books()}\n  {input.scope()}{sentence_type}\n    word{' ' + word_features if word_features else ''}\n\\\"\\\"\\\"\"\"\"\n        return template\n\napp = App(app_ui, server)\n", "type": "text"}]